package org.usfirst.frc6442.Robot2018StartAgain;

import edu.wpi.first.wpilibj.Preferences;

public class RobotValues {
	public Preferences prefs = Preferences.getInstance();
	
	public boolean skipCAN = false;
	
	// PDW Ports
	public int    leftDrivePWM = 0;
	public int   rightDrivePWM = 1;
	public int       feederPWM = 3;
	public int     launcherPWM = 4;
	public int grabberRightPWM = 7;
	public int  grabberLeftPWM = 8;
	
	// DIO Ports
	public int       echoPortOut1 = 0;
	public int    triggerPortIn1  = 1;
	public int       echoPortOut2 = 2;
	public int    triggerPortIn2  = 3;
	public int feedSwitchPortIn   = 4;
	
	// CAN Module ID Assignment
	public int pdpId = 0;
	public int pcmId = 0;
	
	// PCM Channels
	public int solenoidForwardChannel = 0;
	public int solenoidReverseChannel = 1;
	
	// PWM Inverts
	public boolean leftDriveInvert    = false;
	public boolean rightDriveInvert   = true;

	public boolean feederInvert       = false;
	public boolean launcherInvert     = false;

	public boolean grabberRightInvert = false;
	public boolean grabberLeftInvert  = false;
	
	// Launching
	public double highSpeed    = 0.5;
	public double  lowSpeed    = 0.2;
	public double highSpin     = 1;
	public double  lowSpin     = 0.3;
	public double highFeed     = 0.5;
	public double  lowFeed     = 0.2;
	public double highFeedTime = 1;
	public double  lowFeedTime = 2;

	public double gyroTurnErrorMargin = 3;
	
	// Securing
	public int     leftGrabModulo = 2;
	public int    rightGrabModulo = 2;
	public int     leftGrabOn     = 0;
	public int    rightGrabOn     = 1;
	public double grabSpeed       = 0.2;

	// Action timings
	public double launchWait = 1;
	public double exchangeTime = 1;
	public double pushTime = 1;

	// Arcade spin
	public boolean spinInArcade = true;
	public double spinYRange = 0.2;
	public double spinXRange = 0.2;

	public boolean pairDrive = false;

	public double secureSpeed = 1;

	public double exchangeSpeed = 1;

	public double leftDriveFrac = .9;

	public double rightDriveFrac = 1.0;

	
	
	public double get(String key) {
		return prefs.getDouble(key, 0);
	}
	
	public double getDouble(String key, double defaultValue) {
		if (!prefs.containsKey(key)) {
			prefs.putDouble(key, defaultValue);
			return defaultValue;
		}
		return prefs.getDouble(key, defaultValue);
	}
	
	public int getInt(String key, int defaultValue) {
		if (!prefs.containsKey(key)) {
			prefs.putInt(key, defaultValue);
			return defaultValue;
		}
		return prefs.getInt(key, defaultValue);
	}
	
	public boolean getBoolean(String key, boolean defaultValue) {
		if (!prefs.containsKey(key)) {
			prefs.putBoolean(key, defaultValue);
			return defaultValue;
		}
		return prefs.getBoolean(key, defaultValue);
	}
	
	public void update() {
		// BEGIN autogenerated with values-boilerplate.js
		
		skipCAN = getBoolean("skipCAN", skipCAN);
		System.out.println("skipCAN = " + skipCAN);
		
		
		leftDrivePWM = getInt("leftDrivePWM", leftDrivePWM);
		System.out.println("leftDrivePWM = " + leftDrivePWM);
		
		
		rightDrivePWM = getInt("rightDrivePWM", rightDrivePWM);
		System.out.println("rightDrivePWM = " + rightDrivePWM);
		
		
		feederPWM = getInt("feederPWM", feederPWM);
		System.out.println("feederPWM = " + feederPWM);
		
		
		launcherPWM = getInt("launcherPWM", launcherPWM);
		System.out.println("launcherPWM = " + launcherPWM);
		
		
		grabberRightPWM = getInt("grabberRightPWM", grabberRightPWM);
		System.out.println("grabberRightPWM = " + grabberRightPWM);
		
		
		grabberLeftPWM = getInt("grabberLeftPWM", grabberLeftPWM);
		System.out.println("grabberLeftPWM = " + grabberLeftPWM);
		
		
		echoPortOut1 = getInt("echoPortOut1", echoPortOut1);
		System.out.println("echoPortOut1 = " + echoPortOut1);
		
		
		triggerPortIn1 = getInt("triggerPortIn1", triggerPortIn1);
		System.out.println("triggerPortIn1 = " + triggerPortIn1);
		
		
		echoPortOut2 = getInt("echoPortOut2", echoPortOut2);
		System.out.println("echoPortOut2 = " + echoPortOut2);
		
		
		triggerPortIn2 = getInt("triggerPortIn2", triggerPortIn2);
		System.out.println("triggerPortIn2 = " + triggerPortIn2);
		
		
		feedSwitchPortIn = getInt("feedSwitchPortIn", feedSwitchPortIn);
		System.out.println("feedSwitchPortIn = " + feedSwitchPortIn);
		
		
		pdpId = getInt("pdpId", pdpId);
		System.out.println("pdpId = " + pdpId);
		
		
		pcmId = getInt("pcmId", pcmId);
		System.out.println("pcmId = " + pcmId);
		
		
		solenoidForwardChannel = getInt("solenoidForwardChannel", solenoidForwardChannel);
		System.out.println("solenoidForwardChannel = " + solenoidForwardChannel);
		
		
		solenoidReverseChannel = getInt("solenoidReverseChannel", solenoidReverseChannel);
		System.out.println("solenoidReverseChannel = " + solenoidReverseChannel);
		
		
		leftDriveInvert = getBoolean("leftDriveInvert", leftDriveInvert);
		System.out.println("leftDriveInvert = " + leftDriveInvert);
		
		
		rightDriveInvert = getBoolean("rightDriveInvert", rightDriveInvert);
		System.out.println("rightDriveInvert = " + rightDriveInvert);
		
		
		feederInvert = getBoolean("feederInvert", feederInvert);
		System.out.println("feederInvert = " + feederInvert);
		
		
		launcherInvert = getBoolean("launcherInvert", launcherInvert);
		System.out.println("launcherInvert = " + launcherInvert);
		
		
		grabberRightInvert = getBoolean("grabberRightInvert", grabberRightInvert);
		System.out.println("grabberRightInvert = " + grabberRightInvert);
		
		
		grabberLeftInvert = getBoolean("grabberLeftInvert", grabberLeftInvert);
		System.out.println("grabberLeftInvert = " + grabberLeftInvert);
		
		
		highSpeed = getDouble("highSpeed", highSpeed);
		System.out.println("highSpeed = " + highSpeed);
		
		
		lowSpeed = getDouble("lowSpeed", lowSpeed);
		System.out.println("lowSpeed = " + lowSpeed);
		
		
		highSpin = getDouble("highSpin", highSpin);
		System.out.println("highSpin = " + highSpin);
		
		
		lowSpin = getDouble("lowSpin", lowSpin);
		System.out.println("lowSpin = " + lowSpin);
		
		
		highFeed = getDouble("highFeed", highFeed);
		System.out.println("highFeed = " + highFeed);
		
		
		lowFeed = getDouble("lowFeed", lowFeed);
		System.out.println("lowFeed = " + lowFeed);
		
		
		highFeedTime = getDouble("highFeedTime", highFeedTime);
		System.out.println("highFeedTime = " + highFeedTime);
		
		
		lowFeedTime = getDouble("lowFeedTime", lowFeedTime);
		System.out.println("lowFeedTime = " + lowFeedTime);
		
		
		gyroTurnErrorMargin = getDouble("gyroTurnErrorMargin", gyroTurnErrorMargin);
		System.out.println("gyroTurnErrorMargin = " + gyroTurnErrorMargin);
		
		
		leftGrabModulo = getInt("leftGrabModulo", leftGrabModulo);
		System.out.println("leftGrabModulo = " + leftGrabModulo);
		
		
		rightGrabModulo = getInt("rightGrabModulo", rightGrabModulo);
		System.out.println("rightGrabModulo = " + rightGrabModulo);
		
		
		leftGrabOn = getInt("leftGrabOn", leftGrabOn);
		System.out.println("leftGrabOn = " + leftGrabOn);
		
		
		rightGrabOn = getInt("rightGrabOn", rightGrabOn);
		System.out.println("rightGrabOn = " + rightGrabOn);
		
		
		grabSpeed = getDouble("grabSpeed", grabSpeed);
		System.out.println("grabSpeed = " + grabSpeed);
		
		
		launchWait = getDouble("launchWait", launchWait);
		System.out.println("launchWait = " + launchWait);
		
		
		exchangeTime = getDouble("exchangeTime", exchangeTime);
		System.out.println("exchangeTime = " + exchangeTime);
		
		
		pushTime = getDouble("pushTime", pushTime);
		System.out.println("pushTime = " + pushTime);
		
		
		spinInArcade = getBoolean("spinInArcade", spinInArcade);
		System.out.println("spinInArcade = " + spinInArcade);
		
		
		spinYRange = getDouble("spinYRange", spinYRange);
		System.out.println("spinYRange = " + spinYRange);
		
		
		spinXRange = getDouble("spinXRange", spinXRange);
		System.out.println("spinXRange = " + spinXRange);
		
		
		pairDrive = getBoolean("pairDrive", pairDrive);
		System.out.println("pairDrive = " + pairDrive);
		
		
		secureSpeed = getDouble("secureSpeed", secureSpeed);
		System.out.println("secureSpeed = " + secureSpeed);
		
		
		exchangeSpeed = getDouble("exchangeSpeed", exchangeSpeed);
		System.out.println("exchangeSpeed = " + exchangeSpeed);
		
		
		leftDriveFrac = getDouble("leftDriveFrac", leftDriveFrac);
		System.out.println("leftDriveFrac = " + leftDriveFrac);
		
		
		rightDriveFrac = getDouble("rightDriveFrac", rightDriveFrac);
		System.out.println("rightDriveFrac = " + rightDriveFrac);

		// END autogenerated with values-boilerplate.js
	}
	

}
