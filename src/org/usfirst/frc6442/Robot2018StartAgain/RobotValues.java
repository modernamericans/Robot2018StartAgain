package org.usfirst.frc6442.Robot2018StartAgain;

import edu.wpi.first.wpilibj.Preferences;

public class RobotValues {
	public Preferences prefs = Preferences.getInstance();
	
	public boolean skipCAN = false;
	
	// PDW Ports
	public int    leftDrivePWM = 1;
	public int   rightDrivePWM = 0;
	public int       feederPWM = 3;
	public int     launcherPWM = 4;
	public int grabberRightPWM = 7;
	public int  grabberLeftPWM = 8;
	
	// DIO Ports
	public int       echoPortOut1 = 0;
	public int    triggerPortIn1  = 1;
	public int       echoPortOut2 = 2;
	public int    triggerPortIn2  = 3;
	public int feedSwitchPortIn   = 4;
	
	// CAN Module ID Assignment
	public int pdpId = 0;
	public int pcmId = 0;
	
	// PCM Channels
	public int solenoidForwardChannel = 0;
	public int solenoidReverseChannel = 1;
	
	// PWM Inverts
	public boolean leftDriveInvert    = false;
	public boolean rightDriveInvert   = true;

	public boolean feederInvert       = false;
	public boolean launcherInvert     = false;

	public boolean grabberRightInvert = false;
	public boolean grabberLeftInvert  = false;
	
	// Launching
	public double highSpeed    = 0.5;
	public double  lowSpeed    = 0.2;
	public double highSpin     = 1;
	public double  lowSpin     = 0.3;
	public double highFeed     = 0.5;
	public double  lowFeed     = 0.2;
	public double highFeedTime = 1;
	public double  lowFeedTime = 2;

	public double gyroTurnErrorMargin = 3;
	
	// Securing
	public int     leftGrabModulo = 2;
	public int    rightGrabModulo = 2;
	public int     leftGrabOn     = 0;
	public int    rightGrabOn     = 1;
	public double grabSpeed       = 0.2;

	// Action timings
	public double launchWait = 1;
	public double exchangeTime = 1;
	public double pushTime = 1;

	// Arcade spin
	public boolean spinInArcade = true;
	public double spinYRange = 0.2;
	public double spinXRange = 0.2;

	public boolean pairDrive = false;

	public double secureSpeed = 1;

	public double exchangeSpeed = 1;

	
	
	public void update() {
		// BEGIN autogenerated with values-boilerplate.js
		skipCAN = getBoolean("skipCAN", false);
		System.out.println("skipCAN = " + skipCAN);


		leftDrivePWM = getInt("leftDrivePWM", 1);
		System.out.println("leftDrivePWM = " + leftDrivePWM);


		rightDrivePWM = getInt("rightDrivePWM", 0);
		System.out.println("rightDrivePWM = " + rightDrivePWM);


		feederPWM = getInt("feederPWM", 3);
		System.out.println("feederPWM = " + feederPWM);


		launcherPWM = getInt("launcherPWM", 4);
		System.out.println("launcherPWM = " + launcherPWM);


		grabberRightPWM = getInt("grabberRightPWM", 7);
		System.out.println("grabberRightPWM = " + grabberRightPWM);


		grabberLeftPWM = getInt("grabberLeftPWM", 8);
		System.out.println("grabberLeftPWM = " + grabberLeftPWM);


		echoPortOut1 = getInt("echoPortOut1", 0);
		System.out.println("echoPortOut1 = " + echoPortOut1);


		triggerPortIn1 = getInt("triggerPortIn1", 1);
		System.out.println("triggerPortIn1 = " + triggerPortIn1);


		echoPortOut2 = getInt("echoPortOut2", 2);
		System.out.println("echoPortOut2 = " + echoPortOut2);


		triggerPortIn2 = getInt("triggerPortIn2", 3);
		System.out.println("triggerPortIn2 = " + triggerPortIn2);


		feedSwitchPortIn = getInt("feedSwitchPortIn", 4);
		System.out.println("feedSwitchPortIn = " + feedSwitchPortIn);


		pdpId = getInt("pdpId", 0);
		System.out.println("pdpId = " + pdpId);


		pcmId = getInt("pcmId", 0);
		System.out.println("pcmId = " + pcmId);


		solenoidForwardChannel = getInt("solenoidForwardChannel", 0);
		System.out.println("solenoidForwardChannel = " + solenoidForwardChannel);


		solenoidReverseChannel = getInt("solenoidReverseChannel", 1);
		System.out.println("solenoidReverseChannel = " + solenoidReverseChannel);


		leftDriveInvert = getBoolean("leftDriveInvert", false);
		System.out.println("leftDriveInvert = " + leftDriveInvert);


		rightDriveInvert = getBoolean("rightDriveInvert", true);
		System.out.println("rightDriveInvert = " + rightDriveInvert);


		feederInvert = getBoolean("feederInvert", false);
		System.out.println("feederInvert = " + feederInvert);


		launcherInvert = getBoolean("launcherInvert", false);
		System.out.println("launcherInvert = " + launcherInvert);


		grabberRightInvert = getBoolean("grabberRightInvert", false);
		System.out.println("grabberRightInvert = " + grabberRightInvert);


		grabberLeftInvert = getBoolean("grabberLeftInvert", false);
		System.out.println("grabberLeftInvert = " + grabberLeftInvert);


		highSpeed = getDouble("highSpeed", 0.5);
		System.out.println("highSpeed = " + highSpeed);


		lowSpeed = getDouble("lowSpeed", 0.2);
		System.out.println("lowSpeed = " + lowSpeed);


		highSpin = getDouble("highSpin", 1);
		System.out.println("highSpin = " + highSpin);


		lowSpin = getDouble("lowSpin", 0.3);
		System.out.println("lowSpin = " + lowSpin);


		highFeed = getDouble("highFeed", 0.5);
		System.out.println("highFeed = " + highFeed);


		lowFeed = getDouble("lowFeed", 0.2);
		System.out.println("lowFeed = " + lowFeed);


		highFeedTime = getDouble("highFeedTime", 1);
		System.out.println("highFeedTime = " + highFeedTime);


		lowFeedTime = getDouble("lowFeedTime", 2);
		System.out.println("lowFeedTime = " + lowFeedTime);


		gyroTurnErrorMargin = getDouble("gyroTurnErrorMargin", 3);
		System.out.println("gyroTurnErrorMargin = " + gyroTurnErrorMargin);


		leftGrabModulo = getInt("leftGrabModulo", 2);
		System.out.println("leftGrabModulo = " + leftGrabModulo);


		rightGrabModulo = getInt("rightGrabModulo", 2);
		System.out.println("rightGrabModulo = " + rightGrabModulo);


		leftGrabOn = getInt("leftGrabOn", 0);
		System.out.println("leftGrabOn = " + leftGrabOn);


		rightGrabOn = getInt("rightGrabOn", 1);
		System.out.println("rightGrabOn = " + rightGrabOn);


		grabSpeed = getDouble("grabSpeed", 0.2);
		System.out.println("grabSpeed = " + grabSpeed);


		launchWait = getDouble("launchWait", 1);
		System.out.println("launchWait = " + launchWait);


		exchangeTime = getDouble("exchangeTime", 1);
		System.out.println("exchangeTime = " + exchangeTime);


		pushTime = getDouble("pushTime", 1);
		System.out.println("pushTime = " + pushTime);


		spinInArcade = getBoolean("spinInArcade", true);
		System.out.println("spinInArcade = " + spinInArcade);


		spinYRange = getDouble("spinYRange", 0.2);
		System.out.println("spinYRange = " + spinYRange);


		spinXRange = getDouble("spinXRange", 0.2);
		System.out.println("spinXRange = " + spinXRange);


		pairDrive = getBoolean("pairDrive", false);
		System.out.println("pairDrive = " + pairDrive);


		secureSpeed = getDouble("secureSpeed", 1);
		System.out.println("secureSpeed = " + secureSpeed);


		exchangeSpeed = getDouble("exchangeSpeed", 1);
		System.out.println("exchangeSpeed = " + exchangeSpeed);

		// END autogenerated with values-boilerplate.js
	}
	
	public double get(String key) {
		return prefs.getDouble(key, 0);
	}
	
	public double getDouble(String key, double defaultValue) {
		if (!prefs.containsKey(key)) {
			prefs.putDouble(key, defaultValue);
			return defaultValue;
		}
		return prefs.getDouble(key, defaultValue);
	}
	
	public int getInt(String key, int defaultValue) {
		if (!prefs.containsKey(key)) {
			prefs.putInt(key, defaultValue);
			return defaultValue;
		}
		return prefs.getInt(key, defaultValue);
	}
	
	public boolean getBoolean(String key, boolean defaultValue) {
		if (!prefs.containsKey(key)) {
			prefs.putBoolean(key, defaultValue);
			return defaultValue;
		}
		return prefs.getBoolean(key, defaultValue);
	}
}
