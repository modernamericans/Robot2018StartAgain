// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6442.Robot2018StartAgain.commands;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc6442.Robot2018StartAgain.RobotMap;
import org.usfirst.frc6442.Robot2018StartAgain.Robot;

public class DriveCommand extends Command {

    public DriveCommand() {
        requires(Robot.driveTrain);
    }

    @Override
    protected void initialize() {    
    }
    

    @Override
    protected void execute() {
    	int mode = Robot.controllerMode;
    	System.out.println(mode);
    	if(mode == Robot.tankMode) {
    		double left = Robot.oi.leftStickVertical(0);
    		double right = Robot.oi.rightStickVertical(0);
//        	double right = Robot.oi.joystick.getRawAxis(5);
//        	double left = Robot.oi.joystick.getRawAxis(1);

    		Robot.driveTrain.joyDrive(right, left);	
//    	}else if(mode == Robot.t) {
//        	double triggerLeft = Robot.oi.joystick.getRawAxis(2);
//        	double triggerRight = Robot.oi.joystick.getRawAxis(3);
//        	Robot.driveTrain.joyDrive(triggerRight, triggerLeft);
    	}
    	else if(mode == Robot.arcadeMode) {
//    		right = Robot.oi.rightStickHorizontal(0);
    		double left = Robot.oi.leftStickVertical(0);
    		double right = Robot.oi.rightStickHorizontal(0);
//        	double joySpeed = Robot.oi.joystick.getRawAxis(1);
//        	double joySteer = Robot.oi.joystick.getRawAxis(4);
    		double joySpeed = left;
    		double joySteer = -right;
    		
        	double steerStrength = joySteer * joySteer / 2;
        	double rightValue = 1;
        	double leftValue = 1;
        	
        	boolean steerRight = joySteer > 0;
        	boolean steerLeft = joySteer < 0;
        	
        if(steerRight) {
        rightValue = rightValue - steerStrength;	
        }
        if(steerLeft) {
        	leftValue = leftValue - steerStrength;	
        }
        rightValue = rightValue * joySpeed;
        leftValue = leftValue * joySpeed; 
       
    	
    	Robot.driveTrain.joyDrive(rightValue, leftValue);
    	
    	}
    	//4axis left is -, right is +. (steer)	
//		}
//		System.out.println(right + ", " + left);
    }

    @Override
    protected boolean isFinished() {
        return false;
    }

    @Override
    protected void end() {
    }
    @Override
    protected void interrupted() {
    }
}
