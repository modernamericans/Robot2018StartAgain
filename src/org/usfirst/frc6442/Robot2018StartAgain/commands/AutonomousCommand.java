// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6442.Robot2018StartAgain.commands;
import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.Preferences;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.command.Scheduler;

import org.usfirst.frc6442.Robot2018StartAgain.Robot;

/**
 *
 */
public class AutonomousCommand extends Command {

   	//	int time;
	//boolean display = true;//Ideally we could use preferences and pull this from code remotely, but this works for now.
	
	public AutonomousCommand() {

	requires(Robot.driveTrain);

    }

    @Override
    protected void initialize() {
    	   
    	Scheduler.getInstance().add(new AutonomousDisplay());
    	
      
    }

    @Override
    protected void execute() {    
        
//        if(Robot.display) {
//        	Scheduler.getInstance().add(new AutonomousDisplay());
//        }
//        else if(Robot.near == 1) {
//        	if(Robot.StartRight == true)
//        		Scheduler.getInstance().add(new AutonomousRightGoRight());
//        	if(Robot.StartCenter == true)
//        		Scheduler.getInstance().add(new AutonomousCenterGoRight());
//        	if(Robot.StartLeft == true)
//        		Scheduler.getInstance().add(new AutonomousLeftGoRight());
//        }
//        else if(Robot.near == 0) {
//        	if(Robot.StartRight == true)
//        		Scheduler.getInstance().add(new AutonomousRightGoLeft());
//        	if(Robot.StartCenter == true)
//        		Scheduler.getInstance().add(new AutonomousCenterGoLeft());
//        	if(Robot.StartLeft == true)
//        		Scheduler.getInstance().add(new AutonomousLeftGoLeft());
//        }
//             
//        /*System Grab block, however that is done      
//        System.out.println("Got Block");
//        
//    	if (near == 1){
//    	  	System.out.println("Go to Right Start");
//    	  	if(StartLeft == true || StartCenter == true) {
//    	  		//driveForward(.5,time)
//    	  			Robot.driveTrain.autonomousForward(.5);
//    	  			Timer.delay(1);//need to time things out
//    	  			//turnRight(90)
//    	  			Robot.driveTrain.autonomousRightTurn(.5);
//    	  			Timer.delay(1);
//    	  		//driveForward(.5,time)
//    	  			Robot.driveTrain.autonomousForward(.5);
//    	  			Timer.delay(1);
//    	  			if(StartLeft == true) {
//    	  			//driveForward(.5,time)
//    	  				Robot.driveTrain.autonomousForward(.5);
//    	  				Timer.delay(1);
//    	  			}
//    	  			//turnLeft(90)
//    	  			Robot.driveTrain.autonomousLeftTurn(.5);
//    	  			}
//    	  		if(StartRight == true) {
//    	  		//driveForward(.5,time)
//    	  			Robot.driveTrain.autonomousForward(.5);
//    	  			Timer.delay(1);
//    	  		}
//    	  	//driveForward(.5,time)
//    	  	Robot.driveTrain.autonomousForward(.5);
//    	  	Timer.delay(1);
//    	  //turnLeft(90)
//    	  	Robot.driveTrain.autonomousLeftTurn(.5);
//    	  	Timer.delay(1);
//    	  	//eject block;
//    	  	//driveReverse(.5,time);
//    	  //turnRight(90)
//    	  	Robot.driveTrain.autonomousRightTurn(.5);
//    	  	Timer.delay(1);
//    	  //driveForward(.5,time)
//    	  	Robot.driveTrain.autonomousForward(0);
//    	  	}
//    	if (near == 0) {
//	  	System.out.println("Go to Left Start");
//	  	if(StartRight == true || StartCenter == true) {
//	  	//driveForward(.5,time)
//	  		Robot.driveTrain.autonomousForward(.5);
//	  		Timer.delay(1);//need to time things out
//	  	//turnLeft(90)
//	  		Robot.driveTrain.autonomousLeftTurn(.5);
//	  		Timer.delay(1);
//	  	//driveForward(.5,time)
//	  		Robot.driveTrain.autonomousForward(.5);
//	  		Timer.delay(1);
//	  		if(StartLeft == true){
//	  		//driveForward(.5,time)
//	  			Robot.driveTrain.autonomousForward(.5);
//	  			Timer.delay(1);
//	  		}
//	  	//turnRight(90)
//	  		Robot.driveTrain.autonomousRightTurn(.5);
//	  		}
//	  	if(StartRight == true) {
//	  	//driveForward(.5,time)
//	  		Robot.driveTrain.autonomousForward(.5);
//	  		Timer.delay(1);
//	  	}
//	  //driveForward(.5,time)
//	  	Robot.driveTrain.autonomousForward(.5);
//	  	Timer.delay(1);
//	  //turnRight(90)
//	  	Robot.driveTrain.autonomousRightTurn(.5);
//	  	Timer.delay(1);
//	  	//eject block;
//	  	//driveReverse(.5,time);
//	  //turnLeft(90)
//	  	Robot.driveTrain.autonomousLeftTurn(.5);
//	  	Timer.delay(1);
//	  //driveForward(0,time)
//	 	Robot.driveTrain.autonomousForward(0);
//	  	}
//          //time++;
//    }*/
    }

   @Override
    protected boolean isFinished() {
        return false;
    }

   @Override
    protected void end() {
    }

    @Override
    protected void interrupted() {
    }
}
