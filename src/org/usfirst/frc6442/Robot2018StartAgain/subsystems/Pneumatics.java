// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6442.Robot2018StartAgain.subsystems;

import org.usfirst.frc6442.Robot2018StartAgain.Robot;
import org.usfirst.frc6442.Robot2018StartAgain.RobotMap;
import org.usfirst.frc6442.Robot2018StartAgain.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.DoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Pneumatics extends Subsystem {

    private final Compressor compressor1 = RobotMap.pneumaticsCompressor1;
    private final Solenoid solenoid1 = RobotMap.pneumaticsSolenoid1;
    private final Solenoid solenoid2 = RobotMap.pneumaticsSolenoid2;
    private final DoubleSolenoid doubleSolenoid = RobotMap.pneumaticsDoubleSolenoid;

    @Override
    public void initDefaultCommand() {

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
    	/*Compressor c = new Compressor(0);
    	
    	boolean enabled = c.enabled();
    	boolean pressureSwitch = c.getPressureSwitchValue();
    	double current = c.getCompressorCurrent();
    	*/
    }
    
    
    public void up() {
      doubleSolenoid.set(DoubleSolenoid.Value.kForward);   
      
      
    }
    public void down() {
        doubleSolenoid.set(DoubleSolenoid.Value.kReverse);   


      } 
    public void off() {
        doubleSolenoid.set(DoubleSolenoid.Value.kOff);   

      }
    
    
    
	
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

