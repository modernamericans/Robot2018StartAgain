package org.usfirst.frc6442.Robot2018StartAgain.subsystems;

import org.usfirst.frc6442.Robot2018StartAgain.Robot;
import org.usfirst.frc6442.Robot2018StartAgain.RobotMap;
import org.usfirst.frc6442.Robot2018StartAgain.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

public class DriveTrain extends Subsystem {

    private final SpeedController driveRight = RobotMap.driveTrainDriveRight;
    private final SpeedController driveLeft = RobotMap.driveTrainDriveLeft;
    private final SpeedControllerGroup speedControllerGroup1 = RobotMap.driveTrainSpeedControllerGroup1;

    @Override
    public void initDefaultCommand() {
       setDefaultCommand(new DriveCommand());
    }
    
    public void joyDrive(double rightMagnitude, double leftMagnitude) {

    	driveRight.set(rightMagnitude);
    	driveLeft.set(leftMagnitude);
    	//System.out.println("joyDrive output:" + rightMagnitude + " " + leftMagnitude);
    }
    
    //realistically it would be driveForward(double speed, int time)
    //  drive1.set(speed);
    //  drive2.set(speed);
    //  do for(time);
    //  etc for rest of them
    
    public void forwardFull() {

    	set(1,1);
    }
    public void set(double left, double right) {
    	driveRight.set(right);
    	driveLeft.set(left);  	
    }
    
    public void forwardHalf() {
    	set(.5,.5);
    }
    public void rightTurn() {
    	set(-.5,.5);
    }
    public void leftTurn() {
    	set(.5,-.5);
    }
    public void reverse() {
    	set(-.5,-.5);
    }
    public void stop() {
    	set(0,0);
    }
    
    public void periodic() {
    
    }
}

