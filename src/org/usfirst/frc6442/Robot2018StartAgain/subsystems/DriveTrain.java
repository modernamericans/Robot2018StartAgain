// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6442.Robot2018StartAgain.subsystems;

import org.usfirst.frc6442.Robot2018StartAgain.Robot;
import org.usfirst.frc6442.Robot2018StartAgain.RobotMap;
import org.usfirst.frc6442.Robot2018StartAgain.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    private final SpeedController driveRight = RobotMap.driveTrainDriveRight;
    private final SpeedController driveLeft = RobotMap.driveTrainDriveLeft;

    private final SpeedControllerGroup speedControllerGroup1 = RobotMap.driveTrainSpeedControllerGroup1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        //Set the default command for a subsystem here.
       setDefaultCommand(new DriveCommand());
    }
    
    public void joyDrive(double rightMagnitude, double leftMagnitude) {

    	driveRight.set(rightMagnitude);
    	driveLeft.set(leftMagnitude);
    	//System.out.println("joyDrive output:" + rightMagnitude + " " + leftMagnitude);
    }
    
    //realistically it would be driveForward(double speed, int time)
    //  drive1.set(speed);
    //  drive2.set(speed);
    //  do for(time);
    //  etc for rest of them
    
    public void forwardFull() {

    	set(1,1);
    }
    public void set(double left, double right) {
    	driveRight.set(right);
    	driveLeft.set(left);  	
    	
    	
    }
    
    
    public void forwardHalf() {

    	set(.5,.5);
    }
    public void rightTurn() {
    	set(-.5,.5);
    }
    public void leftTurn() {
    	set(.5,-.5);
    }
    public void reverse() {
    	set(-.5,-.5);
    }
    public void stop() {
    	set(0,0);
    }
    
    public void periodic() {
        // Put code here to be run every loop
    
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

