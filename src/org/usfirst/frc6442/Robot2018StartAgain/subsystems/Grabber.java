package org.usfirst.frc6442.Robot2018StartAgain.subsystems;

import org.usfirst.frc6442.Robot2018StartAgain.Robot;
import org.usfirst.frc6442.Robot2018StartAgain.RobotMap;
import org.usfirst.frc6442.Robot2018StartAgain.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

public class Grabber extends Subsystem {

    private final SpeedController grabberR = RobotMap.grabberGrabberR;
    private final SpeedController grabberL = RobotMap.grabberGrabberL;
    private final SpeedControllerGroup grabbingGroup = RobotMap.grabberGrabbingGroup;

    @Override
    public void initDefaultCommand() {

    	setDefaultCommand(new Grab());//We have Grab and Push one and the same, when they should be seperated
    }
    public void grab(double speed) {

    	grabberR.set(speed);
    	grabberL.set(speed);

    	grabbingGroup.set(fracSpeed(speed));
    }
    public void grabAD(double speedR, double speedL) {
    	grabberR.set(fracSpeed(speedR));
    	grabberL.set(fracSpeed(speedL));
    }
   
    public double fracSpeed(double speed) {
    	double speedFrac = Robot.prefs.getDouble("speedFrac", 1);
//    	return speedFrac * speed;
    	return speed;
    	
    	

    }
    //public void push(double speed) {
    	//grabbingGroup.set(-speed);
    //}
    @Override
    public void periodic() {
    }
}

