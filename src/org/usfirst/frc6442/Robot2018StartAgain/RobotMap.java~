// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6442.Robot2018StartAgain;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Ultrasonic;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Compressor pneumaticsCompressor1;
    public static Solenoid pneumaticsSolenoid1;
    public static Solenoid pneumaticsSolenoid2;
    public static SpeedController driveTrainDrive1;
    public static SpeedController driveTrainDrive2;
    public static SpeedControllerGroup driveTrainSpeedControllerGroup1;
    public static PowerDistributionPanel distributionPanelPowerDistributionPanel1;
    public static SpeedController launcherLaunchStage1-1;
    public static SpeedController launcherLaunchStage1-2;
    public static SpeedControllerGroup launcherLauncherStage1Group;
    public static SpeedController launcherLauncherStage2-1;
    public static SpeedController launcherLauncherStage2-2;
    public static SpeedControllerGroup launcherLauncherStage2Group;
    public static Ultrasonic distanceSensorUltrasonic1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pneumaticsCompressor1 = new Compressor(0);
        LiveWindow.addActuator("Pneumatics", "Compressor 1", pneumaticsCompressor1);
        
        pneumaticsSolenoid1 = new Solenoid(0, 0);
        LiveWindow.addActuator("Pneumatics", "Solenoid 1", pneumaticsSolenoid1);
        
        pneumaticsSolenoid2 = new Solenoid(0, 3);
        LiveWindow.addActuator("Pneumatics", "Solenoid 2", pneumaticsSolenoid2);
        
        driveTrainDrive1 = new Spark(0);
        LiveWindow.addActuator("DriveTrain", "Drive 1", (Spark) driveTrainDrive1);
        driveTrainDrive1.setInverted(false);
        driveTrainDrive2 = new Spark(1);
        LiveWindow.addActuator("DriveTrain", "Drive 2", (Spark) driveTrainDrive2);
        driveTrainDrive2.setInverted(false);
        driveTrainSpeedControllerGroup1 = new SpeedControllerGroup(driveTrainDrive1, driveTrainDrive2  );
        LiveWindow.addActuator("DriveTrain", "Speed Controller Group 1", driveTrainSpeedControllerGroup1);
        
        distributionPanelPowerDistributionPanel1 = new PowerDistributionPanel(0);
        LiveWindow.addSensor("DistributionPanel", "PowerDistributionPanel 1", distributionPanelPowerDistributionPanel1);
        
        launcherLaunchStage1-1 = new Spark(2);
        LiveWindow.addActuator("Launcher", "Launch Stage 1-1", (Spark) launcherLaunchStage1-1);
        launcherLaunchStage1-1.setInverted(false);
        launcherLaunchStage1-2 = new Spark(3);
        LiveWindow.addActuator("Launcher", "Launch Stage 1-2", (Spark) launcherLaunchStage1-2);
        launcherLaunchStage1-2.setInverted(false);
        launcherLauncherStage1Group = new SpeedControllerGroup(launcherLaunchStage1-1, launcherLaunchStage1-2  );
        LiveWindow.addActuator("Launcher", "Launcher Stage 1 Group ", launcherLauncherStage1Group);
        
        launcherLauncherStage2-1 = new Spark(5);
        LiveWindow.addActuator("Launcher", "Launcher Stage 2-1", (Spark) launcherLauncherStage2-1);
        launcherLauncherStage2-1.setInverted(false);
        launcherLauncherStage2-2 = new Spark(4);
        LiveWindow.addActuator("Launcher", "Launcher Stage 2-2", (Spark) launcherLauncherStage2-2);
        launcherLauncherStage2-2.setInverted(false);
        launcherLauncherStage2Group = new SpeedControllerGroup(launcherLauncherStage2-1, launcherLauncherStage2-2  );
        LiveWindow.addActuator("Launcher", "Launcher Stage 2 Group", launcherLauncherStage2Group);
        
        distanceSensorUltrasonic1 = new Ultrasonic(0, 1);
        LiveWindow.addSensor("DistanceSensor", "Ultrasonic 1", distanceSensorUltrasonic1);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
